{% set tpl = ix_lib.base.render.Render(values) %}

{% set monitee_agent_container = tpl.add_container(values.consts.monitee_agent_container_name, "image") %}
{% do monitee_agent_container.set_tty(true) %}
{% do monitee_agent_container.set_stdin(true) %}
{% do monitee_agent_container.healthcheck.set_test("curl", {"port": values.network.web_port}) %}


{% do monitee_agent_container.add_caps([ "SYS_RAWIO" ]) %}
{% do monitee_agent_container.remove_security_opt("no-new-privileges") %}
{% do monitee_agent_container.add_security_opt("apparmor", "unconfined") %}

{% do monitee_agent_container.add_port(values.network.web_port) %}

{% if values.monitee_agent.docker_enable %}
{% do monitee_agent_container.add_docker_socket(read_only=False) %}
{% endif %}

{% do monitee_agent_container.add_storage("/host/etc/os-release", { "type": "host_path", "read_only": true, "host_path_config": { "path": "/etc/os-release" } }) %}
{% do monitee_agent_container.add_storage("/host/sys", { "type": "host_path", "read_only": true, "host_path_config": { "path": "/sys" } }) %}
{% do monitee_agent_container.add_storage("/host/proc", { "type": "host_path", "read_only": true, "host_path_config": { "path": "/proc" } }) %}

{% for store in values.storage.additional_storage %}
{% do monitee_agent_container.add_storage(store.mount_path, store) %}
{% endfor %}

{% do tpl.portals.add_portal({ "port": values.network.web_port.port_number }) %}

{{ tpl.render() | tojson }}

